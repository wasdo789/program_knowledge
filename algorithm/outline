## 排序算法

### 冒泡排序
假设有n个数，第一次依次交换相邻的数，使得最大的数移动到最后。第二次依次交换前n-1个数，使得次打的数移动到倒数第二个数，重复n-1次即可。
- 时间复杂o(n2)，空间复杂度o(1)
- 排序性能和输入数据特点有关，如果数据完全有序，在o(n)时间内可以完成
- 稳定排序
在一般情况下，冒泡排序的比较次数和赋值次数都是o(n2)级别，性能最差的

### 插入排序
插入排序的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。注意这里不是交换，而是挪位，因此虽然比较次数和冒泡相同，但是赋值操作少了一半

- 时间复杂o(n2)，空间复杂度o(1)
- 排序性能和输入数据特点无关，即无论数据是否有序都要比较（n2/2)次
- 稳定排序

插入排序的比较次数和赋值次数也是o(n2)级别，性能比冒泡排序好些

### 选择排序
假设有n个数，第一次从1到n选择最小的数，并且和第一个数交换。第二次从2到n选择最小的数和第二个数交换，重复n-1次即可。元素赋值操作次数减少到了n次。但是索引赋值次数还是o(n2)级别

- 时间复杂o(n2)，空间复杂度o(1)
- 排序性能和输入数据特点无关，即无论数据是否有序都要比较（n2/2)次
- 稳定排序


### 希尔排序
是插入排序的一种优化。在插入排序中，由于是一个个比较挪位的，可能出现最小的值在最右边，这样就会挪动n-1次。
希尔排序的实质就是分组插入排序。先将整个待排元素序列分割成若干个子序列（由相隔某个“增量”的元素组成的）分别进行直接插入排序，然后依次缩减增量再进行排序，待整个序列中的元素基本有序（增量足够小）时，再对全体元素进行一次直接插入排序。